a {
    text-decoration-color: transparent;
    opacity: 0.8;
    transition: opacity 0.33s linear, text-decoration-color 0.33s linear;
    line-break: anywhere;
}

    a:hover {
        text-decoration-color: currentcolor;
        opacity: 1;
    }

    a[icon] {
        scale: 2.5;
        padding-inline: 0.25rem;
        text-decoration: none;
        display: inline-block;
        filter: grayscale(1) brightness(1.1) contrast(5);
        font-size: small;
    }

    a, a * {
        display: inline !important;
    }
#components-reconnect-modal {
    background-color: transparent !important;
    place-content: center center !important;
    display: grid !important;
    gap: 1rem;
    opacity: 1 !important;
}

    #components-reconnect-modal > * {
        background-color: #000;
        padding: 1rem;
        box-shadow: 0 0 1rem rgba(255,255,255,.1), 0 1rem 10rem rgba(255,255,255,.1);
        margin: 0 !important;
        border-radius: 100rem;
        display: inline;
    }

    #components-reconnect-modal > *:not(:first-child) {
        display: none !important;
    }
body > main {
    background: color-mix(in srgb, var(--accent-color), var(--background-color));
    padding: 1rem;
    box-shadow: 0 0 5rem var(--accent-color);
    gap: 1rem;
    grid-template-rows: min-content;
    grid-auto-rows: min-content;
}

    body > main:has(> :only-child) {
        grid-template-rows: auto;
    }

body > section > *, main > * {
    filter: drop-shadow(0 0 1rem black);
}

@media only screen and (max-aspect-ratio: 1) {
    body > main {
        padding: 1rem 0;
    }
}

code * {
    display: inline !important;
}
html {
    font-family: ui-monospace, 'Cascadia Code', 'Source Code Pro', Menlo, Consolas, 'DejaVu Sans Mono', monospace;
    font-size: 1.2vw;
    color-scheme: dark light;
    background-color: var(--background-color);
    color: var(--color);
    caret-color: var(--accent-color);
}

@media (max-aspect-ratio: 1) {
    html {
        font-size: 4vw;
    }
}

::selection {
    background: color-mix(in oklab, var(--accent-color) 75%, transparent);
}

a {
    color: inherit;
}

input, button {
    font-family: inherit;
}

:root {
    --background-color-90: color-mix(in oklab, var(--background-color) 90%, var(--color));
    --background-color-80: color-mix(in oklab, var(--background-color) 80%, var(--color));
    --background-color-70: color-mix(in oklab, var(--background-color) 70%, var(--color));

    --accent-color-50: color-mix(in oklab, var(--accent-color) 50%, var(--background-color));

    --color-90: color-mix(in oklab, var(--color) 90%, var(--background-color));
    --color-80: color-mix(in oklab, var(--color) 80%, var(--background-color));
    --color-70: color-mix(in oklab, var(--color) 70%, var(--background-color));

    --accent-color: green;
    --warning-color: yellow;
    --danger-color: red;
}



@media (prefers-color-scheme: light) {
    :root {
        --color: black;
        --background-color: white;
        --accent-color: color-mix(in oklab, springgreen 65%, black);
        --warning-color: color-mix(in oklab, #ddfa00 75%, black);
        --danger-color: color-mix(in oklab, #ff0565 85%, black);
    }
}

@media (prefers-color-scheme: dark) {
    :root {
        --color: white;
        --background-color: black;
        --accent-color: mediumspringgreen;
        --warning-color: #ddfa00;
        --danger-color: #ff0565;
    }
}
*:not(head, title, script, style, link), *::before, *::after {
	display: grid;
	margin: 0;
	padding: 0;
	border-radius: 0;
	border: none;
	box-sizing: border-box;
	font-weight: 400;
}

[popover]:not(:popover-open) {
	display: none;
}
dialog {
    inset: 50%;
    translate: -50% -50%;
    background-color: var(--background-color);
    filter: drop-shadow(0 0 0.25rem var(--background-color-80)) drop-shadow(0 0 0.5rem black) drop-shadow(0 0 1rem black) drop-shadow(0 0 2rem black);
}

footer {
    overflow: hidden;
    padding-inline: 1ch;
    position: sticky;
    bottom: 0;
    height: 1rem;
    background-color: var(--background-color);
    grid-template-columns: auto auto 1fr;
    place-items: center end;
}

footer, footer * {
    grid-auto-flow: column;
    gap: 1ch;
}

    footer > * {
        opacity: 0.5;
    }

    footer * {
        white-space: nowrap;
    }

        footer *:nth-last-of-type(2) {
            flex-grow: 1;
        }

form, form * {
}

button, .button, input, label:has(input:not([type=file])) {
    --button-color: var(--accent-color);
    transition: all 0.33s linear;
    font-size: inherit;
}

    input:not([type=submit], input[type=reset], [type=file], [readonly]) {
        font: inherit;
        min-height: 2rem;
        background: var(--background-color-90);
        color: var(--color);
        text-align: center;
        border: 0.25rem solid var(--background-color-70);
    }

        input:not([type=submit], input[type=reset], [type=file], [readonly]):focus-visible,
        input:not([type=submit], input[type=reset], [type=file], [readonly]):hover {
            border: 0.25rem solid var(--accent-color);
            box-shadow: inset 0 0 1rem var(--accent-color), 0 0 1rem var(--accent-color);
            outline: none;
            scale: 1.005;
            z-index: 1;
        }

    input::placeholder {
        opacity: 0.5;
    }

    input:read-only {
        background-color: transparent;
    }

    input[type=date] {
        display: block;
        padding-right: 1ch;
    }

    input[type=file] {
        display: none;
    }


    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        margin: 0;
    }


:is(fieldset) {
    gap: 1rem;
}

:is(fieldset > legend) {
    line-break: normal;
    text-wrap: balance;
    display: block;
    transition: all 0.33s linear;
    line-height: 1rem;
    padding-top: 1.5rem;
    padding-bottom: 0.5rem;
    color: var(--accent-color);
    opacity: 0.7;
    background: transparent;
}

    :is(fieldset > legend) > *:first-of-type {
        margin-top: 0.5rem;
    }



:is(button, .button, input[type=submit], input[type=reset], label:has(input:not([type=file]))) {
    background-color: var(--background-color-80);
    font-weight: inherit;
    font-family: inherit;
    text-decoration-color: transparent;
    text-align: center;
    cursor: default;
    opacity: initial;
    align-items: center;
    min-height: 2rem;
    color: var(--button-color);
    place-content: center;
}

:is(button, .button, input[type=submit], input[type=reset], label:has(input:not([type=file])), [readonly] ):hover:not(:disabled), label:has(input:checked) {
    background: var(--button-color);
    box-shadow: 0 0 1rem var(--button-color);
    contain: content;
    color: var(--color);
    scale: 1.005;
    z-index: 1;
}

:is(button, .button, input[type=submit], input[type=reset]):disabled {
    opacity: 0.7;
    text-decoration-color: transparent;
}

:is(button, .button, input[type=submit], input[type=reset]) svg {
    max-width: 2rem;
}
body {
    
    grid-template-rows: auto 1fr auto;
}
ul, li {
    min-height: 2rem;
}

ul {
    place-content: start stretch;
}

li {
    place-content: center stretch;
    transition: all 0.125s linear;
}

    li:hover {
        box-shadow: 0 0 12rem rgba(0, 0, 0, 0.25), 0 0 1rem rgba(0, 0, 0, 0.75);
        scale: 1.005;
        z-index: 1;
    }

    li:nth-of-type(n+2) {
        background-color: var(--background-color-80);
    }

    li:nth-of-type(2n+1) {
        background-color: var(--background-color-90);
    }

    li button:not(:hover) {
        background-color: transparent;
        filter: grayscale(1);
    }

[horizontal] {
    grid-auto-flow: column;
    grid-auto-columns: 1fr;
}

[inline] {
    grid-auto-flow: column;
    grid-auto-columns: min-content;
    gap: 1ch;
}


[vertical] {
    grid-auto-flow: row;
    place-content: start stretch;
}
h1 {
    line-height: 2rem;
    padding: 0.5rem 1rem;
}

body > header {
    position: sticky;
    top: 0;
    left: 0;
    z-index: 1;
    backdrop-filter: blur(10px);
    
    grid-template-columns: 1fr auto calc(100% - env(titlebar-area-width, 100%));
    place-items: start;
    app-region: drag;
    background-color: var(--background-color);
}

    body > header *:not(a) {
        user-select: none;
    }

    body > header *:not(nav) {
        app-region: no-drag;
    }

    body > header nav {
        color: var(--secondary);
        line-break: normal;
        text-wrap: balance;
        overflow: hidden;
        font-size: 2em;
        font-weight: bold;
        color: white;
        grid-auto-flow: column;
        background-color: transparent;
        line-height: 2rem;
    }
body > main > section > header {
    line-height: 2rem;
    font-weight: 900;
    text-transform: lowercase;
    background: var(--accent-color);
    padding: 0 1rem;
    color: var(--background-color);
    width: max-content;
}

body > main > section > *:not(header) {
    background-color: var(--background-color);
}

main {
    grid-gap: 2rem;
}

main > section:only-child {
    overflow: auto;
    height: 100%;
}
nav.breadcrumbs {
    overflow: hidden;
    text-overflow: clip;
}

    nav.breadcrumbs * {
        white-space: nowrap;
    }

    nav.breadcrumbs, nav.breadcrumbs a:last-of-type, nav.breadcrumbs a:first-of-type, nav.breadcrumbs :not(a) {
        color: var(--accent-color) !important;
    }

        nav.breadcrumbs a:not(a:last-of-type):not(a:first-of-type) {
            color: var(--color) !important;
            opacity: 0.4;
        }

        nav.breadcrumbs a:hover:not(a:last-of-type):not(a:first-of-type) {
            opacity: 0.8;
        }

        nav.breadcrumbs a:first-of-type {
            scale: 1.5;
            translate: 0 -0.25rem;
            padding-inline: 0.25rem;
        }

nav * {
    text-decoration: none;
}

nav {
    padding-inline: 1rem;
    gap: 1rem;
}

nav:not(.breadcrumbs) h1 {
    text-wrap: initial;
}

nav:not(.breadcrumbs) a {
    line-break: auto;
}

    nav:not(.breadcrumbs) a:first-of-type {
        text-decoration: none;
    }

    nav:not(.breadcrumbs) a:not(.active):not(:first-of-type) {
        color: var(--color) !important;
        opacity: 0.4;
    }

    nav:not(.breadcrumbs) a:hover:not(.active):not(:first-of-type) {
        opacity: 0.8;
    }

    nav:not(.breadcrumbs) a.active, nav:not(.breadcrumbs) a:first-of-type {
        color: var(--accent-color) !important;
    }

progress {
    color: var(--accent-color);
    width: 100%;
    height: 100%;
}

    progress::-webkit-progress-bar {
        background-color: transparent;
    }

    progress::-webkit-progress-value {
        background: var(--accent-color);
        box-shadow: 0 0 1rem var(--accent-color);
    }

html {
    min-height: 100%;
    app-region: drag;
    user-select: none;
}

body {
    /*height: calc(100% - env(titlebar-area-height, 0px));*/
    /*margin-top: env(titlebar-area-height, 0px);*/
    min-height: 100%;
    app-region: no-drag;
}
::-webkit-scrollbar {
    width: 0.5rem;
    background: transparent;
}

::-webkit-scrollbar * {
    background: transparent;
}

::-webkit-scrollbar-thumb {
    background: color-mix(in srgb, var(--accent-color) 75%, var(--background-color));
    border: 0.125rem solid transparent;
    background-clip: padding-box;
    border-radius: 1rem;
    box-shadow: 0 0 5rem var(--accent-color);
}
