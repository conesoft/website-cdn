#components-reconnect-modal {
    background-color: transparent !important;
    place-content: center center !important;
    display: grid !important;
    gap: 1rem;
    opacity: 1 !important;
}

    #components-reconnect-modal > * {
        background-color: #000;
        padding: 1rem;
        box-shadow: 0 0 1rem rgba(255,255,255,.1), 0 1rem 10rem rgba(255,255,255,.1);
        margin: 0 !important;
        border-radius: 100rem;
        display: inline;
    }

    #components-reconnect-modal > *:not(:first-child) {
        display: none !important;
    }
* {
    -contain: content;
}

html, body {
    contain: inherit;
}
*, *::before, *::after {
	margin: 0;
	padding: 0;
	width: 100%;
	border-radius: 0;
	border: none;
	box-sizing: border-box;
	font-weight: 100;
	font-size: inherit;
	background: inherit;
	line-break: anywhere;
	outline: none;
}

* {
    display: grid;
}

head, script {
    display: none;
}

p, p *, code, code * {
    display: inline;
}
[grid-auto-flow-column], [horizontal] {
    grid-auto-flow: column;
}

[horizontal] > *:last-child {
    place-self: stretch end;
}


[grid-auto-flow-row], [vertical] {
    grid-auto-flow: row;
    place-content: start stretch;
}
html {
    height: 100%;
    min-height: 100%;
    app-region: drag;
    user-select: none;
}

    html:not(:has(:fullscreen)) {
        scrollbar-gutter: stable;
    }

body {
    height: calc(100% - env(titlebar-area-height,0));
    margin-top: env(titlebar-area-height, 0);
    app-region: no-drag;
    grid-template-rows: auto auto 1fr;
}
table, table * {
    display: revert;
    border-collapse: collapse;
}

td {
    white-space: nowrap;
}

td:first-of-type {
    max-width: 0;
    overflow:hidden;
}

td:not(:first-of-type) {
    text-align: right;
}

a, a * {
    display: inline;
}

a {
    color: #DDD;
    text-decoration-color: transparent;
    opacity: 0.8;
    transition: opacity 0.33s linear, text-decoration-color 0.33s linear;
    line-break: anywhere;
}
    a:hover {
        text-decoration-color: #DDD;
        opacity: 1;
    }

    a[icon] {
        scale: 2.5;
        padding-inline: 0.25rem;
        text-decoration: none;
        display: inline-block;
        filter: grayscale(1) brightness(1.1) contrast(5);
        font-size: small;
    }
aside {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

audio {
    min-width: 15rem;
    opacity: 0.5;
    margin: -0.75rem;
    padding: 0.5rem;
}

b, i {
    color: lightgreen;
    font-weight: 100;
}

i {
    opacity: 0.5;
    min-height: 2rem;
}
body > *:has(+ footer) {
    padding-bottom: 3rem;
}

footer {
    position: sticky;
    margin: 5rem 0 0;
    bottom: -1px;
    align-self: end;
    background: #000A;
    opacity: 0;
    animation: footer-fadein 1.666s cubic-bezier(0.390, 0.575, 0.565, 1.000);
    animation-delay: 1s;
    animation-fill-mode: forwards;
    grid-auto-flow: row;
    grid-template-columns: auto min-content min-content;
    height: 2rem;
    backdrop-filter: blur(0.25rem);
    cursor: default;
    overflow: hidden;
}

    footer > * {
        text-align: right;
        line-height: 2rem;
        white-space: nowrap;
        opacity: 0.5;
    }

        footer > *:not(:first-of-type)::before {
            content: "|\00a0";
            color: white;
        }

        footer > *::after {
            content: "\00a0";
        }

@keyframes footer-fadein {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

code.hljs {
    padding: 0 !important;
}

.hljs, .hljs * {
    background: transparent !important;
}
form {
}



input {
    font: inherit;
    min-height: 2rem;
    background: #111;
    color: #BBB;
    text-align: center;
}

    input::placeholder {
        opacity: 0.5;
    }

    input:read-only {
        background-color: transparent;
    }



label {
    text-align: center;
    line-break: normal;
    text-wrap: balance;
    display: block;
    line-height: 1rem;
    padding-block: 0.5rem;
    color: var(--primary);
}

    label > *:first-of-type {
        margin-top: 0.5rem;
    }



:is(button, input[type=submit]) {
    background-color: #222;
    color: #DDD;
    font-size: inherit;
    font-weight: inherit;
    font-family: inherit;
    transition: all 0.33s linear;
    text-decoration-color: transparent;
    text-align: center;
    cursor: default;
    opacity: initial;
    align-items: center;
    min-height: 2rem;
}

    :is(button, input[type=submit]):hover:not(:disabled) {
        border-color: #DDD;
        text-decoration-color: transparent;
        filter: invert();
    }

    :is(button, input[type=submit]):disabled {
        opacity: 0.7;
        text-decoration-color: transparent;
    }

    :is(button, input[type=submit]) svg {
        max-width: 2rem;
    }

header {
    position: sticky;
    top: 0;
    z-index: 1;
    margin: 1.5rem 0;
    backdrop-filter: blur(10px);
    background-color: rgb(0, 0, 0, 0.15);
    width: auto;
    /*text-shadow: 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black, 0 0 5rem black;*/
    box-shadow: 0 0 1.5rem black;
}

h1 {
    color: var(--secondary);
    line-break: normal;
    text-wrap: balance;
    overflow: hidden;
}

[centered] h1 {
    text-align: center;
}

header h1 {
    font-size: 2em;
    font-weight: bold;
    color: white;
    grid-auto-flow: column;
    place-self: start;
    background-color: transparent;
}

h1:focus-visible {
    outline: none;
}
:root {
    --primary: #DDD;
    --default: var(--primary);
    --secondary: #EEE;
    --sidemargin: 1rem;
}

html {
    background: black;
    font-family: monospace;
    font-size: 1.414rem;
    color-scheme: dark light;
}

* {
    color: var(--primary)
}
svg, path {
    fill: var(--primary)
}

*[default] {
    --primary: #DDD;
    --secondary: #EEE;
}

*[green] {
    --primary: green;
    --secondary: lightgreen;
}

*[red] {
    --primary: brown;
    --secondary: lightcoral;
}

html[full-width] {
    --sidemargin: 0;
}
li {
    list-style-type: none;
    position: relative;
    grid-auto-flow: column;
}

    li > *:last-child:not(:first-child) {
        text-align: right;
    }

    li:nth-child(2n + 1), tbody tr:nth-child(2n + 1) {
        background-color: #111;
    }

    li:nth-child(2n), tbody tr:nth-child(2n) {
        background-color: #222;
    }

    li button {
        padding-inline: 1rem;
        aspect-ratio: 1;
        opacity: .3;
        mix-blend-mode: screen;
        font-size: 2rem;
        translate: var(--sidemargin) 0rem;
    }

        li button:hover {
            opacity: 1;
        }

*[command-buttons] {
    background-color: white;
}
*[command-buttons] * {
    width: 1rem;
}
body:has(main[centered]) {
    place-self: stretch center;
    max-width: 60rem;
}

body:has(main[centered][thin]) {
    max-width: 20rem;
}

main {
    grid-gap: 2rem;
}

main > section {
    grid-gap: 1rem;
}

main > section > h2 {
    font-size: 1.4rem;
    line-height: 2rem;
}
nav {
    grid-auto-flow: column
}

    nav[breadcrumbs] {
        grid-auto-columns: max-content;
        grid-gap: 1rem
    }
nav[breadcrumbs] {
    display: inline;
    overflow: hidden;
    text-overflow: clip;
}
    nav[breadcrumbs] * {
        white-space: nowrap;
    }

    nav[breadcrumbs], nav[breadcrumbs] a:last-of-type, nav[breadcrumbs] a:first-of-type, nav[breadcrumbs] :not(a) {
        color: var(--default) !important;
    }

        nav[breadcrumbs] a:not(a:last-of-type):not(a:first-of-type) {
            color: var(--secondary) !important;
            opacity: 0.4;
        }

        nav[breadcrumbs] a:hover:not(a:last-of-type):not(a:first-of-type) {
            opacity: 0.6;
        }

    nav[breadcrumbs] a:first-of-type {
        scale: 1.5;
        translate: 0 -0.25rem;
        padding-inline: 0.25rem;
        text-decoration: none;
    }
html {
    padding: 0;
}

li, td, tr td:first-of-type > *, h1, b {
    min-height: 2rem;
    place-content: center start;
}

    li, h1, tr td:first-of-type > *, nav > *:first-of-type, main > section > h2 {
        padding-left: var(--sidemargin);
    }
    li, h1, tr td:last-of-type > *, nav > *:last-of-type {
        padding-right: var(--sidemargin);
    }

    td:not(:first-of-type):not(:last-of-type) {
        padding-inline: 1rem;
    }
    td:first-of-type {
        padding-right: 1rem;
    }
    td:last-of-type {
        padding-left: 1rem;
    }
[pretty-card] {
    border-radius: 1rem;
    padding: 0;
    overflow: hidden;
    background-color: #111;
}

*:has(> [pretty-card]), [pretty-card] {
    gap: 1rem;
}

[pretty-card] *:not(:only-child) {
    gap: 1rem;
}

[pretty-card] h2 {
    font-size: 1.4rem;
    line-height: 2rem;
}

    [pretty-card] > section[vertical] {
        padding: 1rem;
        padding-inline-end: 0;
    }

    [pretty-card] > section[horizontal] {
        padding: 1rem;
        padding-block-end: 0;
    }

    [pretty-card] button {
        border-radius: 0 1rem 1rem 0;
        translate: 0rem;
    }
progress {
    height: 2rem;
    margin: .5rem 0;
}

/* firefox fixes */

progress {
    background: gray;
    border: inherit;
}

progress::-moz-progress-bar {
    background-color: var(--primary);
}