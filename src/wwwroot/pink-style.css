/* reset */
html {
    min-height: 100dvh;
}

:where(*:not(head, script, meta, style)) {
    all: unset;
    line-height: 100%;
    box-sizing: border-box;
    display: grid;
}

img {
    max-width: 100%;
}

/* reset back all inputs, if ya don't want to overwrite them from zero as i did below */
/*input {
  all: revert;
}*/

a {
    cursor: pointer;
}

main a, main *:has(a) {
    display: inline;
}



/* color-scheme with basic dark-theme support (waiting for color-mix()) */
:root {
    --color-accent: #f69;
    --color-foreground: black;
    --color-background: white;
}

html {
    --accent: var(--color-accent);
    --foreground: var(--color-foreground);
    --background: var(--color-background);
    color: var(--foreground);
    background-color: var(--background);
    accent-color: var(--accent);
    caret-color: var(--accent);
}

main a {
    color: var(--accent);
}

@media (prefers-color-scheme: dark) {
    html {
        --foreground: var(--color-background);
        --background: var(--color-foreground);
    }
}



/* basic theme */
html {
    font-family: sans-serif;
}

body {
    align-self: center;
    justify-self: center;
    max-width: 35rem;
    margin: 0.5rem;
    gap: 1rem;
}

main {
    gap: 1rem;
}

h1 {
    color: var(--accent);
}

header h1 {
    font-size: 3rem;
    font-family: monospace;
    font-weight: 900;
    margin-block-end: 1rem;
}

header nav {
    grid-auto-flow: column;
    grid-auto-columns: min-content;
    grid-gap: 1rem;
}

article h1 {
    font-size: 2rem;
    font-family: monospace;
    font-weight: 900;
    margin-block-end: 1rem;
}

footer {
    font-family: monospace;
    font-weight: 900;
    position: fixed;
    bottom: 0;
    justify-self: center;
}



/* form layout library */
label {
    grid-auto-flow: column;
    grid-auto-columns: max-content;
    grid-gap: 0.5rem;
    align-items: center;
    cursor: default;
}


    input:not([type=checkbox], [type=radio], [type=file]), label:has(input[type=file]) {
        height: calc(2.25rem + 0.125rem);
        background-color: var(--background);
        border: 0.25rem solid var(--foreground);
        margin-block: 0.25rem;
        padding-inline: 0.5rem;
    }



input:is([type=checkbox], [type=radio]) {
    position: relative;
    height: calc(2rem - 1.5rem / 2);
    background-color: var(--foreground);
    margin-block: calc(1.5rem / 2);
    aspect-ratio: 1;
    transition: all 0.25s ease;
}

input[type=checkbox]:checked {
    background: var(--accent);
}

input[type=checkbox]::after, input[type=checkbox]::before {
    position: absolute;
    inset: 0;
    content: "";
    background: var(--foreground);
    opacity: 0;
    width: 0.3rem;
    transform: translate(0.5rem, 0) scale(1.414);
    transition: all 0.25s ease;
}

input[type=checkbox]::before {
    height: 0.5rem;
}

input[type=checkbox]:checked::before {
    opacity: 1;
    transform: translate(0.25rem, 0.557rem) rotate(120deg) scale(0.7);
}

input[type=checkbox]:checked::after {
    opacity: 1;
    transform: translate(0.6rem, 0rem) rotate(30deg) scale(0.7);
}


input[type=radio]:checked {
    border: 0.25rem solid var(--accent);
}

input[type=radio], input[type=radio]::before, input[type=radio]::after {
    border-radius: 100%;
}


input[type=submit] {
    color: var(--accent);
    font-weight: 900;
    grid-column: 1 / -1;
}

input[type=submit], input::placeholder {
    text-align: center;
}


input {
    transition: all 0.125s linear;
}

    input:is(:active, :focus, :checked) {
        border-color: var(--accent);
    }

    input:not([type=file]):hover, label:has(input[type=file]):hover {
        box-shadow: 0 0 1rem 0 var(--accent);
    }

label:has(:checked) {
    color: var(--accent);
}

label > input[type=file] {
    position: relative;
    padding-block: 0.4rem;
    font-style: italic;
    padding-left: 1.5rem;
    font-weight: 100;
}

    label > input[type=file]::before {
        position: absolute;
        content: "â–¶";
        color: var(--accent);
        margin-left: -1.5rem;
        font-style: normal;
    }

    label > input[type=file]::after {
        position: absolute;
        inset: 0;
        content: "";
        opacity: 0.5;
        margin-left: 1rem;
        background-color: var(--background);
        font-style: normal;
    }

::file-selector-button {
    display: none;
}

label:has(input[type=file]) {
    grid-column: 1 / -1;
    grid-template-columns: auto 1fr;
    padding-left: 1rem;
    padding-right: 0;
    font-weight: 600;
}


form {
    position: relative;
    margin-block: 1rem;
    grid-template-columns: repeat(auto-fit, minmax(15rem, 1fr));
    grid-gap: 0 1rem;
}

    form h1 {
        grid-column: 1 / -1;
    }

article {
    position: relative;
    margin-block: 1rem;
}

    form::after, article::after {
        content: '';
        position: absolute;
        background-color: var(--foreground);
        opacity: 0.125;
        inset: -1rem -0.5rem;
        z-index: -1;
    }
